name: Deploy to DigitalOcean

on:
  workflow_dispatch:
    inputs:
      environment:
        type: 'choice'
        description: 'Specify the target environment'
        required: false
        options:
            - 'dev'
            - 'stage'
            - 'prod'
        default: 'dev'
      firebird-server:
        type: 'boolean'
        description: 'firebird-server'
        required: true
        default: true
      servicebroker:
        type: 'boolean'
        description: 'servicebroker'
        required: true
        default: true
      webcms:
        type: 'boolean'
        description: 'webcms'
        required: true
        default: true
      go-api:
        type: 'boolean'
        description: 'go-api'
        required: true
        default: true
      
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      
      - name: Deploy Docker Compose services
        run: |

            SERVICES=""

            # Check if firebird-server service should be built
            if [ "${{ github.event.inputs.firebird-server }}" == "true" ]; then
               SERVICES="$SERVICES firebird"
            fi

            # Check if servicebroker service should be built
            if [ "${{ github.event.inputs.servicebroker }}" == "true" ]; then
               SERVICES="$SERVICES servicebroker"
            fi

            # Check if webcms service should be built
            if [ "${{ github.event.inputs.webcms }}" == "true" ]; then
               SERVICES="$SERVICES webcms"
            fi

            # Check if go-api service should be built
            if [ "${{ github.event.inputs.go-api }}" == "true" ]; then
               SERVICES="$SERVICES go-api"
            fi

            # List of service should be built
            
            echo 'SERVICES=$SERVICES' >> $GITHUB_ENV

      # - name: install ssh keys
      #   run: |
          
      #       install -m 600 -D /dev/null ~/.ssh/id_rsa
      #       echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
      #       ssh-keyscan -H ${{ secrets.SSH_HOST_IP }} > ~/.ssh/known_hosts
          
      - name: pull, build and deploy the containers
        run: |

            echo $SERVICES
            echo $GITHUB_ENV
            echo 
            env
            # ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_IP }} \
            #   "cd ${{ secrets.WORK_DIR }}" \
            #   "&& git checkout main" \
            #   "&& git pull" \
            #   "&& echo $SERVICES" \
            #   "&& exit"
    
      - name: cleanup
        run: rm -rf ~/.ssh